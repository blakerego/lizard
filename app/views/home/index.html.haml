
.style2
	.row.header
		.logo.col-md-4.col-xs-10
			ZE REP TILES
		.stop.tape_btn.col-md-1.col-xs-1
		.ff.tape_btn.col-md-1.col-xs-1
		.play.tape_btn.col-md-1.col-xs-1
		.rw.tape_btn.col-md-1.col-xs-1

	= render 'shared/loading'
	.tiles_area

	= audio_tag('cassette-player-button-3.mp3')

:javascript
	$(function() {

		window.TILE_LAYOUT = function() {}
		TILE_LAYOUT.prototype = {
			init: function()
			{
				var tiles = JSON.parse('#{@tiles.to_a.to_json(:methods => :thumb)}');
				var markup = "<div class='row tile-row'>";
				
				var current_row_size = 0; 
				var current_inst = this;
				$.each(tiles, function(index, tile)
				{
					if (current_row_size + tile.size <= 12)
					{
						markup += current_inst.add_tile(tile, false);
						current_row_size += tile.size;
					}
					else 
					{
						markup += current_inst.add_tile(tile, true);
						current_row_size += tile.size - 12;
					}

				});

				$('.tiles_area').html(markup + "</div>");
			},

			add_tile: function(tile, new_row)
			{
				var c = "tile col-xs-12 col-md-" + tile.size.toString();
				var markup = "";

				if (new_row)
				{
					markup += "</div><div class='row tile-row'>"
				}
				markup += "<div class='" + c + "' data-id=" + tile.id + " style='background-image: url(\"" + tile.thumb+ "\")'><div class='play_tile'>0<span class='play-icon'></span><div class='btm-row'><span class='share-icon'></span><span class='expand-icon'></span></div></div></div>";
				return markup;
			}
		}

		window.AUDIO_CONTROL = function() {}
		AUDIO_CONTROL.prototype = {
			playing: false,
			ffwding: false,
			audioElement: document.createElement('audio'),

			init: function()
			{
				
				this.audioElement.setAttribute('src', "#{audio_url('cassette-player-button-3.mp3')}");
				var current_inst = this;

				$('.tape_btn').on('click', function()
				{
					current_inst.play_tape_btn_sound();
				})

				$('.play').on('click', function()
				{
					current_inst.playing = current_inst.toggle(this, current_inst.playing);
				});

				$('.stop').on('click', function()
				{
					current_inst.toggle($('.play'), true);
					current_inst.playing = false;
				});
			}, 

			toggle: function(button, state)
			{
				if(!state)
				{
					$(button).addClass('playing');
					return true;
				}
				else 
				{
					$(button).removeClass('playing');
					return false;
				}
			},

			play_tape_btn_sound: function()
			{
				this.audioElement.play();
			}
		}

		var tiles = new TILE_LAYOUT();
		tiles.init();

		var ctrls = new AUDIO_CONTROL();
		ctrls.init(); 

		$('.loader').hide();
		$('.tiles_area').show();
	})
